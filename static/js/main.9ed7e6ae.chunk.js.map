{"version":3,"sources":["logo.svg","toolkitRedux/toolkitReducer.js","components/input-comp/add-comp/add-comp.js","components/input-comp/filter-comp/filter.js","components/input-comp/main-block-inp.js","components/list/list.js","App.js","reportWebVitals.js","redux/rootReducer.js","toolkitRedux/index.js","index.js"],"names":["addContact","createAction","text","num","payload","removeContact","id","findContact","find","initialState","contacts","items","JSON","parse","localStorage","getItem","filter","createReducer","state","action","newItem","nextId","Date","getMilliseconds","name","setItem","stringify","remArr","AddComp","useState","setName","setNum","err","setErr","errP","setErrP","a","opacity","position","marginTop","fontSize","transition","marginLeft","background","bordeRadius","color","padding","b","errS","useSelector","toolkit","dispatch","useDispatch","handler","useCallback","p1","p2","p3Arr","trim","setTimeout","arrayTodo","item","length","className","style","type","onChange","ev","target","value","aria-describedby","width","onClick","Filter","filterName","setFilterName","reducerFilter","useEffect","MainBlockInp","ph","setPh","filS","setFilS","List","setItems","con","removeI","datarr","toLowerCase","indexOf","map","CSSTransition","timeout","classNames","ListGroup","Item","Button","variant","size","deleteI","Container","marginBottom","TransitionGroup","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","toolkitReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ed7e6ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport nextId from \"react-id-generator\";\r\n\r\nexport const addContact = createAction(\"ADD_CONTACT\", function prepare(\r\n  text,\r\n  num\r\n) {\r\n  return {\r\n    payload: {\r\n      text,\r\n      num,\r\n    },\r\n  };\r\n});\r\nexport const removeContact = createAction(\"REMOVE_CONTACT\", function prepare(\r\n  id\r\n) {\r\n  return {\r\n    payload: { id },\r\n  };\r\n});\r\nexport const findContact = createAction(\"FILTER\", function prepare(find) {\r\n  return {\r\n    payload: {\r\n      find,\r\n    },\r\n  };\r\n});\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: JSON.parse(localStorage.getItem(\"list\")) || [],\r\n    filter: \"\",\r\n  },\r\n};\r\nexport default createReducer(initialState, {\r\n  [addContact]: function (state, action) {\r\n    const idGen = nextId();\r\n    const newObjItem = {\r\n      id: idGen + new Date().getMilliseconds(),\r\n      name: action.payload.text,\r\n      num: action.payload.num,\r\n    };\r\n    const newItem = [newObjItem, ...state.contacts.items];\r\n    localStorage.setItem(\"list\", JSON.stringify(newItem));\r\n    state.contacts.items = JSON.parse(localStorage.getItem(\"list\"));\r\n  },\r\n  [removeContact]: function (state, action) {\r\n    let remArr = state.contacts.items.filter(\r\n      ({ id }) => id !== action.payload.id\r\n    );\r\n    localStorage.setItem(\"list\", JSON.stringify(remArr));\r\n\r\n    state.contacts.items = remArr;\r\n  },\r\n  [findContact]: function (state, action) {\r\n    state.contacts.filter = action.payload.find;\r\n  },\r\n});\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContact } from \"./../../../toolkitRedux/toolkitReducer\";\r\n\r\nconst AddComp = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [num, setNum] = useState(\"\");\r\n  const [err, setErr] = useState(false);\r\n  const [errP, setErrP] = useState(false);\r\n  const [errS, setErrS] = useState({\r\n    a: {\r\n      opacity: 0,\r\n      position: \"absolute\",\r\n      marginTop: \"-60px\",\r\n      fontSize: \"1.3em\",\r\n      transition: \"2s\",\r\n      marginLeft: \"500px\",\r\n      background: \"red\",\r\n      bordeRadius: \"10px\",\r\n      color: \"white\",\r\n      padding: \"4px\",\r\n    },\r\n    b: {\r\n      opacity: 1,\r\n      position: \"absolute\",\r\n      marginTop: \"-60px\",\r\n      marginLeft: \"0px\",\r\n      fontSize: \"1.3em\",\r\n      transition: \"2s\",\r\n      background: \"red\",\r\n      bordeRadius: \"10px\",\r\n      color: \"white\",\r\n      padding: \"4px\",\r\n    },\r\n  });\r\n  const contacts = useSelector((state) => state.toolkit.contacts.items);\r\n\r\n  const dispatch = useDispatch();\r\n  const handler = useCallback((p1, p2, p3Arr) => {\r\n    if (p1.trim() === \"\" || p2.trim() === \"\") {\r\n      setErrP(true);\r\n      setTimeout(() => {\r\n        setErrP(false);\r\n      }, 3000);\r\n    } else {\r\n      // проверка\r\n      const filterSearch = (arrayTodo) => {\r\n        return arrayTodo.filter((item) => {\r\n          return item.name === p1;\r\n        });\r\n      };\r\n      if (filterSearch(p3Arr).length > 0) {\r\n        setErr(true);\r\n        setTimeout(() => {\r\n          setErr(false);\r\n        }, 3000);\r\n      } else {\r\n        dispatch(addContact(p1, p2));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const actionName = (ev) => {\r\n    setName(ev.target.value);\r\n  };\r\n  const actionNum = (ev) => {\r\n    setNum(ev.target.value);\r\n  };\r\n  const sendDataTuRedux = () => {\r\n    handler(name, num, contacts);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <p style={err ? errS.b : errS.a}>\r\n          {\" \"}\r\n          {name} пользователь уже зарегестрирован\r\n        </p>\r\n        <p style={errP ? errS.b : errS.a}> заполните все поля</p>\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={actionName}\r\n          value={name}\r\n          aria-describedby=\"emailHelp\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Number</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          onChange={actionNum}\r\n          value={num}\r\n        />\r\n      </div>\r\n      <button\r\n        style={{ width: \"100%\" }}\r\n        type=\"submit\"\r\n        className=\"btn btn-dark\"\r\n        onClick={() => sendDataTuRedux()}\r\n      >\r\n        Add contact\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default AddComp;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { findContact } from \"./../../../toolkitRedux/toolkitReducer\";\r\n\r\nconst Filter = () => {\r\n  const [filterName, setFilterName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const reducerFilter = useCallback((p1) => {\r\n    dispatch(findContact(p1));\r\n  }, []);\r\n\r\n  const actionFilter = (ev) => {\r\n    setFilterName(ev.target.value);\r\n  };\r\n  useEffect(() => {\r\n    reducerFilter(filterName);\r\n  }, [filterName]);\r\n  return (\r\n    <div className=\"form-group filtDiv\">\r\n      <label>Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        onChange={actionFilter}\r\n        value={filterName}\r\n        aria-describedby=\"emailHelp\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AddComp from \"./add-comp/add-comp\";\r\nimport Filter from \"./filter-comp/filter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./mainAdd.css\";\r\nconst MainBlockInp = () => {\r\n  const [ph, setPh] = useState({\r\n    marginLeft: \"-400px\",\r\n  });\r\n  const [filS, setFilS] = useState(false);\r\n  const contacts = useSelector((state) => state.toolkit.contacts.items);\r\n  let test = \"\";\r\n  useEffect(() => {\r\n    if (contacts.length > 0) {\r\n      setFilS(true);\r\n    } else {\r\n      setFilS(false);\r\n    }\r\n  }, [contacts]);\r\n  useEffect(() => {\r\n    if (contacts.length > 0) {\r\n      setFilS(true);\r\n    }\r\n    setPh({ marginLeft: \"0px\", transition: \"1s\" });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"phone\">\r\n        <p style={ph}>PhoneBook</p>\r\n      </div>\r\n      <div className=\"mainAdd\">\r\n        <AddComp />\r\n      </div>\r\n      {filS ? <Filter /> : null}\r\n    </div>\r\n  );\r\n};\r\nexport default MainBlockInp;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Container, ListGroup, Button } from \"react-bootstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeContact } from \"./../../toolkitRedux/toolkitReducer\";\r\nimport \"./list.css\";\r\n\r\nconst List = () => {\r\n  const [items, setItems] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const con = useSelector((state) => state.toolkit.contacts.items);\r\n  const filter = useSelector((state) => state.toolkit.contacts.filter);\r\n  const removeI = useCallback((id) => {\r\n    dispatch(removeContact(id));\r\n  }, []);\r\n  const deleteI = (id) => {\r\n    removeI(id);\r\n  };\r\n  useEffect(() => {\r\n    setItems(con);\r\n  }, [con]);\r\n  const filterSearch = (arrayTodo) => {\r\n    if (filter === \"\") {\r\n      return arrayTodo;\r\n    } else {\r\n      return arrayTodo.filter((item) => {\r\n        return item.name.toLowerCase().indexOf(filter.toLowerCase()) > -1;\r\n      });\r\n    }\r\n  };\r\n  const datarr = filterSearch(items).map(({ id, name, num }) => {\r\n    return (\r\n      <CSSTransition key={id} timeout={500} classNames=\"item\">\r\n        <ListGroup.Item className=\"li\">\r\n          <p>{name}</p> <p> {num}</p>\r\n          <Button\r\n            className=\"remove-btn\"\r\n            variant=\"danger\"\r\n            size=\"sm\"\r\n            onClick={() => deleteI(id)}\r\n          >\r\n            &times;\r\n          </Button>\r\n        </ListGroup.Item>\r\n      </CSSTransition>\r\n    );\r\n  });\r\n  if (items.length === 0) {\r\n    return <div style={{ marginTop: \"20px\" }}>записей не найдено</div>;\r\n  }\r\n  return (\r\n    <Container style={{ marginTop: \"2rem\" }}>\r\n      <ListGroup style={{ marginBottom: \"1rem\" }}>\r\n        <TransitionGroup className=\"todo-list\">{datarr}</TransitionGroup>\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\nexport default List;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MainBlockInp from \"./components/input-comp/main-block-inp\";\nimport List from \"./components/list/list\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"center\">\n        <MainBlockInp />\n        <List />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_CONTACT, REMOVE_CONTACT, FILTER } from \"./actions\";\r\nimport nextId from \"react-id-generator\";\r\nconst initialState = {\r\n  contacts: {\r\n    items: JSON.parse(localStorage.getItem(\"list\")) || [],\r\n    filter: \"\",\r\n  },\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      const idGen = nextId();\r\n      const newObjItem = {\r\n        id: idGen + new Date().getMilliseconds(),\r\n        name: action.text,\r\n        num: action.num,\r\n      };\r\n      const newItem = [newObjItem, ...state.contacts.items];\r\n      localStorage.setItem(\"list\", JSON.stringify(newItem));\r\n      return {\r\n        contacts: {\r\n          ...state.contacts,\r\n          items: JSON.parse(localStorage.getItem(\"list\")),\r\n        },\r\n      };\r\n\r\n    case REMOVE_CONTACT:\r\n      console.log(action);\r\n      let remArr = state.contacts.items.filter(({ id }) => id !== action.id);\r\n      console.log(remArr);\r\n      localStorage.setItem(\"list\", JSON.stringify(remArr));\r\n      return {\r\n        contacts: {\r\n          ...state.contacts,\r\n          items: remArr,\r\n        },\r\n      };\r\n    case FILTER:\r\n      console.log(action);\r\n\r\n      return {\r\n        contacts: {\r\n          ...state.contacts,\r\n          filter: action.find,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport toolkitReducer from \"./toolkitReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n  toolkit: toolkitReducer,\r\n});\r\nexport const store = configureStore({\r\n  reducer: rootReducers,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./redux/rootReducer\";\nimport { store } from \"./toolkitRedux\";\n// const store = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}